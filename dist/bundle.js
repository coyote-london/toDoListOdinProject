(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>s});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([n.id,"body {\n    background-color: rgb(48, 50, 61);\n}\n\n.questName,\n.nextTask {\n    margin: 1.2vw;\n}\n\n\n#objectCarousel {\n    background-color: rgb(48, 50, 61);\n    border: .7vw solid rgb(207, 212, 238);\n    border-radius: 2vw;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: flex-start;\n    min-width: 70vw;\n    min-height: 70vh;\n}\n\n.quest {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\n.questHeading {\n    border-bottom: .7vh solid rgb(207, 212, 238);\n    min-width: 68vw;\n    text-align: center;\n    font-size: 6vw;\n    margin-top: 2vh;\n    margin-bottom: 1vh;\n}\n\n.taskContainer {\n    margin-top: 1vh;\n}\n\n.task {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border-bottom: .2vh solid rgb(207, 212, 238);\n    min-width: 68vw;\n    margin-top: 1vh;\n}\n\n#homePage {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    background-color: rgb(48, 50, 61);\n    border: .7vw solid rgb(207, 212, 238);\n    border-radius: 2vw;\n    color: rgb(207, 212, 238);\n    padding: 2vw;\n    min-height: 90vh;\n}\n\n\n\n.quest {\n    background-color: rgb(48, 50, 61);\n    border: .7vw solid rgb(207, 212, 238);\n    border-radius: 2vw;\n    margin: 2vw;\n    padding: 1vw;\n    min-width: 65vw;\n}\n\nbutton {\n    background-color: rgb(207, 212, 238);\n    border: .5vw solid rgb(111, 114, 128);\n    color: rgb(48, 50, 61);\n    border-radius: 1.5vw;\n    margin: 1vw;\n}\n\n.dropMenuOpen {\n    display: flex;\n    background-color: rgb(48, 50, 61);\n    align-self: center;\n    border: .3vw solid rgb(207, 212, 238);\n    border-radius: 2vw;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,iCAAiC;AACrC;;AAEA;;IAEI,aAAa;AACjB;;;AAGA;IACI,iCAAiC;IACjC,qCAAqC;IACrC,kBAAkB;IAClB,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,2BAA2B;IAC3B,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,4CAA4C;IAC5C,eAAe;IACf,kBAAkB;IAClB,cAAc;IACd,eAAe;IACf,kBAAkB;AACtB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,4CAA4C;IAC5C,eAAe;IACf,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,uBAAuB;IACvB,iCAAiC;IACjC,qCAAqC;IACrC,kBAAkB;IAClB,yBAAyB;IACzB,YAAY;IACZ,gBAAgB;AACpB;;;;AAIA;IACI,iCAAiC;IACjC,qCAAqC;IACrC,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,oCAAoC;IACpC,qCAAqC;IACrC,sBAAsB;IACtB,oBAAoB;IACpB,WAAW;AACf;;AAEA;IACI,aAAa;IACb,iCAAiC;IACjC,kBAAkB;IAClB,qCAAqC;IACrC,kBAAkB;AACtB",sourcesContent:["body {\n    background-color: rgb(48, 50, 61);\n}\n\n.questName,\n.nextTask {\n    margin: 1.2vw;\n}\n\n\n#objectCarousel {\n    background-color: rgb(48, 50, 61);\n    border: .7vw solid rgb(207, 212, 238);\n    border-radius: 2vw;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: flex-start;\n    min-width: 70vw;\n    min-height: 70vh;\n}\n\n.quest {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\n.questHeading {\n    border-bottom: .7vh solid rgb(207, 212, 238);\n    min-width: 68vw;\n    text-align: center;\n    font-size: 6vw;\n    margin-top: 2vh;\n    margin-bottom: 1vh;\n}\n\n.taskContainer {\n    margin-top: 1vh;\n}\n\n.task {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border-bottom: .2vh solid rgb(207, 212, 238);\n    min-width: 68vw;\n    margin-top: 1vh;\n}\n\n#homePage {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    background-color: rgb(48, 50, 61);\n    border: .7vw solid rgb(207, 212, 238);\n    border-radius: 2vw;\n    color: rgb(207, 212, 238);\n    padding: 2vw;\n    min-height: 90vh;\n}\n\n\n\n.quest {\n    background-color: rgb(48, 50, 61);\n    border: .7vw solid rgb(207, 212, 238);\n    border-radius: 2vw;\n    margin: 2vw;\n    padding: 1vw;\n    min-width: 65vw;\n}\n\nbutton {\n    background-color: rgb(207, 212, 238);\n    border: .5vw solid rgb(111, 114, 128);\n    color: rgb(48, 50, 61);\n    border-radius: 1.5vw;\n    margin: 1vw;\n}\n\n.dropMenuOpen {\n    display: flex;\n    background-color: rgb(48, 50, 61);\n    align-self: center;\n    border: .3vw solid rgb(207, 212, 238);\n    border-radius: 2vw;\n}"],sourceRoot:""}]);const s=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var d=0;d<n.length;d++){var l=[].concat(n[d]);o&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},i=[],s=0;s<n.length;s++){var c=n[s],d=o.base?c[0]+o.base:c[0],l=a[d]||0,u="".concat(d," ").concat(l);a[d]=l+1;var A=t(u),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==A)e[A].references++,e[A].updater(p);else{var m=r(p,o);o.byIndex=s,e.splice(s,0,{identifier:u,updater:m,references:1})}i.push(u)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var s=t(a[i]);e[s].references--}for(var c=o(n,r),d=0;d<a.length;d++){var l=t(a[d]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=c}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),r=t.n(o),a=t(569),i=t.n(a),s=t(565),c=t.n(s),d=t(216),l=t.n(d),u=t(589),A=t.n(u),p=t(426),m={};m.styleTagTransform=A(),m.setAttributes=c(),m.insert=i().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=l(),e()(p.Z,m),p.Z&&p.Z.locals&&p.Z.locals;function C(n,e,t=[]){t.length>0&&t.splice(t.indexOf(n),1),e.removeChild(n)}const g=(n,e,t,o)=>{const r=document.createElement("div");r.className="task";const a=document.createElement("h3");a.className="taskHeading",a.innerHTML=n,r.appendChild(a);const i=[],s=((n,e)=>{const t=document.createElement("button");return t.className="editTextButton",t.innerHTML="Edit",t.onclick=t=>{t.stopPropagation(),function(n,e){n.innerHTML=window.prompt(e)}(n,e)},{button:t}})(a,"What is the new task?"),c=((n,e,t=[])=>{const o=document.createElement("button");return o.className="deleteButton",o.innerHTML="Delete",o.onclick=t=>{t.stopPropagation(),C(n,e,[])},{button:o}})(r,o,e),d=((n,e,t,o,r,a=!1,i="")=>{const s=document.createElement("button");return s.className="changeArrayButton",s.innerHTML=r,s.onclick=r=>{r.stopPropagation(),C(n,o,e),function(n,e,t){t.push(e.indexOf(n)),e.splice(e.indexOf(n))}(n,e,t),1==a&&window.alert(t.length+i)},{}})(r,e,t,o,"Complete",!0," tasks completed");i.push(s.button),i.push(c.button),i.push(d.button);const l=((n,e=!0,t="open",o="close")=>{const r=document.createElement("div");r.className="dropMenuClosed";const a=document.createElement("button");a.className="dropMenuButton",a.innerHTML=t,a.onclick=n=>{n.stopPropagation(),"dropMenuClosed"==r.className?function(){r.className="dropMenuOpen",r.innerHTML="",1==e&&r.appendChild(a),a.innerHTML="close";for(let n=0;n<i.length;n++)r.appendChild(i[n]);0==e&&r.appendChild(a)}():(r.className="dropMenuClosed",r.innerHTML="",r.appendChild(a),a.innerHTML="open")},r.appendChild(a);const i=n;return console.log(i),{dropMenuContainer:r}})(i,!1);return r.appendChild(l.dropMenuContainer),{task:r}};(()=>{const n=document.getElementById("content");n.innerHTML="";const e=document.createElement("div");e.id="homePage",n.appendChild(e);const t=document.createElement("h1");t.id="title",t.innerHTML="Quest Log";const o=document.createElement("div");o.id="objectCarousel";const r=[];let a=-1;const i=document.createElement("div");i.className="buttonContainer";const s=document.createElement("button");s.className="previousQuestButton",s.innerHTML="Previous Quest",s.onclick=n=>{n.stopPropagation(),a>0&&(a-=1),A(r[a])};const c=document.createElement("button");c.id="addQuestButton",c.innerHTML="Add Quest",c.onclick=n=>{n.stopPropagation();const e=(n=>{const e=[],t=[],o=document.createElement("div");o.className="quest";const r=document.createElement("h2");r.className="questHeading",r.innerHTML=n,o.appendChild(r);const a=document.createElement("div");a.className="taskContainer",o.appendChild(a);const i=document.createElement("div");i.className="buttonContainer",o.appendChild(i);const s=document.createElement("button");return s.className="newTaskButton",s.innerHTML="New Task",s.onclick=n=>{n.stopPropagation();const o=g(window.prompt("What task needs to be done?"),e,t,a);e.push(o),a.appendChild(o.task)},i.appendChild(s),{quest:o}})(window.prompt("What do you want to accomplish?"));r.push(e),console.log(r),a=r.length-1,A(r[a])};const d=document.createElement("button");d.className="deleteQuest",d.innerHTML="Delete Quest",d.onclick=n=>{n.stopPropagation(),r.splice(a,1),a==r.length&&(a=r.length-1),A(r[a])};const l=document.createElement("button");function u(){e.innerHTML="",e.appendChild(t),e.appendChild(o),e.appendChild(i)}function A(n){o.innerHTML="",r.length<1||(o.appendChild(n.quest),u())}return l.className="nextQuestButton",l.innerHTML="Next Quest",l.onclick=n=>{n.stopPropagation(),a<r.length-1&&(a+=1),A(r[a])},i.appendChild(s),i.appendChild(c),i.appendChild(d),i.appendChild(l),{renderPage:u}})().renderPage()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,