(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>c});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,"body {\n    background-color: rgb(48, 50, 61);\n}\n\n.questName,\n.nextTask {\n    margin: 1.2vw;\n}\n\n\n#questContainer {\n    background-color: rgb(48, 50, 61);\n    border: .7vw solid rgb(207, 212, 238);\n    border-radius: 2vw;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: flex-start;\n    min-width: 70vw;\n    min-height: 70vh;\n}\n\n#homePage {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    background-color: rgb(48, 50, 61);\n    border: .7vw solid rgb(207, 212, 238);\n    border-radius: 2vw;\n    color: rgb(207, 212, 238);\n    padding: 2vw;\n    min-height: 90vh;\n}\n\n\n\n.quest {\n    background-color: rgb(48, 50, 61);\n    border: .7vw solid rgb(207, 212, 238);\n    border-radius: 2vw;\n    margin: 2vw;\n    padding: 1vw;\n    min-width: 65vw;\n}\n\nbutton {\n    background-color: rgb(207, 212, 238);\n    border: .5vw solid rgb(111, 114, 128);\n    color: rgb(48, 50, 61);\n    border-radius: 1.5vw;\n    margin: 1vw;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,iCAAiC;AACrC;;AAEA;;IAEI,aAAa;AACjB;;;AAGA;IACI,iCAAiC;IACjC,qCAAqC;IACrC,kBAAkB;IAClB,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,2BAA2B;IAC3B,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,uBAAuB;IACvB,iCAAiC;IACjC,qCAAqC;IACrC,kBAAkB;IAClB,yBAAyB;IACzB,YAAY;IACZ,gBAAgB;AACpB;;;;AAIA;IACI,iCAAiC;IACjC,qCAAqC;IACrC,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,oCAAoC;IACpC,qCAAqC;IACrC,sBAAsB;IACtB,oBAAoB;IACpB,WAAW;AACf",sourcesContent:["body {\n    background-color: rgb(48, 50, 61);\n}\n\n.questName,\n.nextTask {\n    margin: 1.2vw;\n}\n\n\n#questContainer {\n    background-color: rgb(48, 50, 61);\n    border: .7vw solid rgb(207, 212, 238);\n    border-radius: 2vw;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: flex-start;\n    min-width: 70vw;\n    min-height: 70vh;\n}\n\n#homePage {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    background-color: rgb(48, 50, 61);\n    border: .7vw solid rgb(207, 212, 238);\n    border-radius: 2vw;\n    color: rgb(207, 212, 238);\n    padding: 2vw;\n    min-height: 90vh;\n}\n\n\n\n.quest {\n    background-color: rgb(48, 50, 61);\n    border: .7vw solid rgb(207, 212, 238);\n    border-radius: 2vw;\n    margin: 2vw;\n    padding: 1vw;\n    min-width: 65vw;\n}\n\nbutton {\n    background-color: rgb(207, 212, 238);\n    border: .5vw solid rgb(111, 114, 128);\n    color: rgb(48, 50, 61);\n    border-radius: 1.5vw;\n    margin: 1vw;\n}"],sourceRoot:""}]);const c=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var d=0;d<n.length;d++){var u=[].concat(n[d]);r&&i[u[0]]||(void 0!==a&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=a),t&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=t):u[2]=t),o&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=o):u[4]="".concat(o)),e.push(u))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],c=0;c<n.length;c++){var s=n[c],d=r.base?s[0]+r.base:s[0],u=a[d]||0,l="".concat(d," ").concat(u);a[d]=u+1;var p=t(l),A={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(A);else{var m=o(A,r);r.byIndex=c,e.splice(c,0,{identifier:l,updater:m,references:1})}i.push(l)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var c=t(a[i]);e[c].references--}for(var s=r(n,o),d=0;d<a.length;d++){var u=t(a[d]);0===e[u].references&&(e[u].updater(),e.splice(u,1))}a=s}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),o=t.n(r),a=t(569),i=t.n(a),c=t(565),s=t.n(c),d=t(216),u=t.n(d),l=t(589),p=t.n(l),A=t(426),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=i().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=u(),e()(A.Z,m),A.Z&&A.Z.locals&&A.Z.locals;(()=>{const n=document.getElementById("content");n.innerHTML="";const e=document.createElement("div");e.id="homePage",n.appendChild(e);const t=document.createElement("h1");t.id="title",t.innerHTML="Quest Log";const r=document.createElement("div");r.id="questContainer";const o=[];let a=-1;const i=document.createElement("div");i.className="buttonContainer";const c=document.createElement("button");c.className="previousQuestButton",c.innerHTML="Previous Quest",c.onclick=n=>{n.stopPropagation(),a>0&&(a-=1),l(o[a])};const s=document.createElement("button");s.id="addQuestButton",s.innerHTML="Add Quest",s.onclick=n=>{n.stopPropagation();const e=(n=>{const e=document.createElement("div");e.className="quest";const t=document.createElement("h2");t.className="questHeading",t.innerHTML=n,e.appendChild(t);const r=document.createElement("div");r.className="taskContainer",e.appendChild(r);const o=document.createElement("div");o.className="buttonContainer",e.appendChild(o);const a=[],i=document.createElement("button");i.className="newTaskButton",i.innerHTML="New Task",i.onclick=n=>{n.stopPropagation();const e=c(window.prompt("What task needs to be done?"));a.push(e),r.appendChild(e.task)},o.appendChild(i);const c=n=>{const e=document.createElement("div");e.className="task";const t=document.createElement("h3");t.className="taskHeading",t.innerHTML=n,e.appendChild(t);const r=document.createElement("button");return r.className="editButton",r.innerHTML="Edit",e.appendChild(r),{task:e}};return{quest:e}})(window.prompt("What do you want to accomplish?"));o.push(e),console.log(o),a=o.length-1,l(o[a])};const d=document.createElement("button");function u(){e.innerHTML="",e.appendChild(t),e.appendChild(r),e.appendChild(i)}function l(n){o.length<1||(r.innerHTML="",r.appendChild(n.quest),u())}return d.className="nextQuestButton",d.innerHTML="Next Quest",d.onclick=n=>{n.stopPropagation(),a<o.length-1&&(a+=1),l(o[a])},i.appendChild(c),i.appendChild(s),i.appendChild(d),{renderPage:u}})().renderPage()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,